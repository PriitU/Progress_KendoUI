webpackJsonp([4],{

/***/ 379:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("///////////////////\n// Auto-generated\n// Do not edit!!!\n///////////////////\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _angular = __webpack_require__(6);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _controller = __webpack_require__(393);\n\nvar _controller2 = _interopRequireDefault(_controller);\n\nvar _controller3 = __webpack_require__(400);\n\nvar _controller4 = _interopRequireDefault(_controller3);\n\nvar _routerEvents = __webpack_require__(401);\n\nvar _routerEvents2 = _interopRequireDefault(_routerEvents);\n\nvar _bottomSection = __webpack_require__(412);\n\nvar _bottomSection2 = _interopRequireDefault(_bottomSection);\n\nvar _middleSection = __webpack_require__(413);\n\nvar _middleSection2 = _interopRequireDefault(_middleSection);\n\nvar _topSection = __webpack_require__(414);\n\nvar _topSection2 = _interopRequireDefault(_topSection);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _angular2.default.module('views.contracts.contract', []).controller('ContractsContractCtrl', _controller4.default).factory('contractsContract', _routerEvents2.default).run(['$templateCache', function ($templateCache) {\n    $templateCache.put('views.contracts.contract.bottomSection.html', _bottomSection2.default);\n    $templateCache.put('views.contracts.contract.middleSection.html', _middleSection2.default);\n    $templateCache.put('views.contracts.contract.topSection.html', _topSection2.default);\n}]).name;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/contracts/contract/index.js\n// module id = 379\n// module chunks = 4\n\n//# sourceURL=webpack:///./src/modules/contracts/contract/index.js?");

/***/ }),

/***/ 393:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("///////////////////\n// Auto-generated\n// Do not edit!!!\n///////////////////\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BaseController = function () {\n    function BaseController($scope, $injector) {\n        var _this = this;\n\n        _classCallCheck(this, BaseController);\n\n        this.$scope = $scope;\n        this.$dataProviderService = $injector.get('providerService');\n        this.$dsService = $injector.get('dsService');\n        this.$viewModels = {\n            formModel: {},\n            fkeyModels: {}\n        };\n        this.$ds = {};\n        this.$primeDSName = '$primeDS';\n\n        this.$pendingChangeMessage = 'There are unsaved changes. Do you want to complete the changes before continuing?';\n        this.$window = $injector.get('$window');\n\n        this.$ds[this.$primeDSName] = new kendo.data.DataSource({\n            \"transport\": this.$dataProviderService.getTransport('ProjectData', {\n                \"jsdo\": \"beContract\"\n            }),\n\n            \"type\": \"jsdo\",\n\n            \"pageSize\": 20\n\n        });\n        this.$ds[this.$primeDSName].bind('sync', this._$syncHandler.bind(this)).bind('error', this._$errorHandler.bind(this)).bind('change', this._$changeHandler.bind(this)).bind('requestStart', this._$requestStartHandler.bind(this));\n\n        var that = this;\n\n        this.$viewModels.fkeyModels['$cachedbeCustomer.ttCustomerFK1DSModel'] = {};\n        this.$ds['beCustomer.ttCustomerFK1DS'] = new kendo.data.DataSource({\n            \"transport\": this.$dataProviderService.getTransport('ProjectData', {\n                \"jsdo\": \"beCustomer\"\n            }),\n\n            \"type\": \"jsdo\",\n\n            change: function change(e) {\n                var ds = e.sender;\n                var view = ds.view();\n                if (ds.filter() && ds.filter().filters.length > 0) {\n                    if (view.length > 0) {\n                        that.$viewModels.fkeyModels['$cachedbeCustomer.ttCustomerFK1DSModel'] = view[0];\n                    } else {\n                        that.$viewModels.fkeyModels['$cachedbeCustomer.ttCustomerFK1DSModel'] = {};\n                    }\n                } else {\n                    that.$scope.$applyAsync(function () {\n                        that.$viewModels.fkeyModels['beCustomer.ttCustomerFK1DSModel'] = that.$viewModels.fkeyModels['$cachedbeCustomer.ttCustomerFK1DSModel'];\n                    });\n                }\n            }\n        });\n        this.$ds['beCustomer.ttCustomerFK1DS'].bind('error', this._$errorHandlerForeignKeys.bind(this));\n\n        this._$createPristineModel('beCustomer.ttCustomerFK1DS');\n        this._$watchForeignKeyModel('beCustomer.ttCustomerFK1DSModel', 'CustomerId', 'CustomerId');\n\n        this.$model = {\n            title: 'Add Contract',\n            newTitle: 'New',\n            editTitle: 'Edit',\n            editMode: 'Read-Only to Edit',\n            confirmRemove: true,\n            formOptions: {\n                dataSource: this.$ds[this.$primeDSName]\n            },\n            gridOptions: {\n                pageable: {\n                    pageSize: 20,\n                    refresh: true\n                },\n                filterable: false,\n                groupable: false,\n                resizable: false,\n                reorderable: false,\n                sortable: false,\n                selectable: true,\n                columns: [{\n                    \"encoded\": true,\n                    \"field\": \"ContractNr\",\n                    \"filterable\": true,\n                    \"format\": \"\",\n                    \"sortable\": true,\n                    \"title\": \"Contract Nr\"\n                }, {\n                    \"encoded\": true,\n                    \"field\": \"ContractStatus\",\n                    \"filterable\": true,\n                    \"format\": \"\",\n                    \"sortable\": true,\n                    \"title\": \"Contract Status\"\n                }],\n                dataSource: this.$ds[this.$primeDSName]\n            },\n            customSections: {\n                top: 'views.contracts.contract.topSection.html',\n                middle: 'views.contracts.contract.middleSection.html',\n                bottom: 'views.contracts.contract.bottomSection.html'\n            },\n            events: {\n                onRowSelect: function onRowSelect(e) {\n\n                    if (e.fromView) {\n                        _this['onRowSelect'](e);\n                    }\n                },\n                onDataBound: function onDataBound(e) {}\n            }\n        };\n        this.$grid = null;\n        this.$requestType = '';\n        this.$components = {};\n\n        this.$components['ctl3'] = {\n            events: {\n                onChange: function onChange(e) {}\n            },\n            validation: {\n                required: false\n            }\n        };\n\n        this.$components['ctl19'] = {\n            widget: null,\n            options: {\n                dataSource: this.$ds['beCustomer.ttCustomerFK1DS'],\n                dataTextField: \"IdCode\",\n                dataValueField: \"CustomerId\",\n                valuePrimitive: false,\n                filter: \"none\"\n            },\n            events: {\n                onChange: function onChange(e) {},\n                onSelect: function onSelect(e) {},\n                onFilter: function onFilter(e) {}\n            },\n            validation: {\n                required: false\n            }\n        };\n\n        this.$components['ctl7'] = {\n            widget: null,\n            options: {\n                downArrowText: \"\",\n                format: \"c\",\n                placeholder: \"\",\n\n                upArrowText: \"\",\n                spinners: false\n            },\n            events: {\n                onChange: function onChange(e) {}\n            },\n            validation: {\n                required: false\n            }\n        };\n\n        this.$components['ctl13'] = {\n            widget: null,\n            options: {\n                min: new Date(\"1899-12-31T22:00:00.000Z\"),\n                max: new Date(\"2099-12-30T22:00:00.000Z\"),\n                format: \"{0:g}\",\n                interval: 30\n            },\n            events: {\n                onChange: function onChange(e) {}\n            },\n            validation: {\n                required: false\n            }\n        };\n\n        this.$components['ctl15'] = {\n            widget: null,\n            options: {\n                min: new Date(\"1899-12-31T22:00:00.000Z\"),\n                max: new Date(\"2099-12-30T22:00:00.000Z\"),\n                format: \"{0:g}\",\n                interval: 30\n            },\n            events: {\n                onChange: function onChange(e) {}\n            },\n            validation: {\n                required: false\n            }\n        };\n\n        this.$components['ctl17'] = {\n            widget: null,\n            options: {\n                min: new Date(\"1899-12-31T22:00:00.000Z\"),\n                max: new Date(\"2099-12-30T22:00:00.000Z\"),\n                format: \"{0:g}\",\n                interval: 30\n            },\n            events: {\n                onChange: function onChange(e) {}\n            },\n            validation: {\n                required: false\n            }\n        };\n    }\n\n    _createClass(BaseController, [{\n        key: '$onInit',\n        value: function $onInit() {\n            var _this2 = this;\n\n            this.$scope.$on('$includeContentLoaded', function () {\n                if (_this2.includeContentLoaded) {\n                    _this2.includeContentLoaded();\n                }\n            });\n\n            this.$scope.$on('$viewContentLoaded', function (e) {\n                if (_this2['onShow']) {\n                    _this2['onShow'](e.currentScope);\n                }\n            });\n\n            this.$scope.$on('$includeContentError', function (e) {\n                if (_this2.includeContentError) {\n                    _this2.includeContentError(e);\n                }\n            });\n\n            this.$scope.$on(\"kendoWidgetCreated\", function (event, widget) {\n                if (widget instanceof kendo.ui.Grid) {\n                    widget.one('dataBound', _this2._$dataBoundHandler.bind(_this2));\n                    widget.wrapper.on('click', '.k-grid-content tr[data-uid]', _this2._$onChangeEvent.bind(_this2));\n                }\n            });\n\n            this.$scope.$on('$stateChangeStart', this._$routeChange.bind(this));\n\n            angular.element(this.$window).on('beforeunload', this._$beforeunloadHandler.bind(this));\n\n            this.$validatorOptions = {\n                errorTemplate: '<p class=\"input__required\">#=message#</p>'\n            };\n\n            this.$scope.$on('$destroy', this._$destroy.bind(this));\n        }\n    }, {\n        key: '_$routeChange',\n        value: function _$routeChange(event) {\n            if (this.$ds[this.$primeDSName].hasChanges() && confirm(this.$pendingChangeMessage)) {\n                event.preventDefault();\n            }\n\n            return;\n        }\n    }, {\n        key: '_$beforeunloadHandler',\n        value: function _$beforeunloadHandler(e) {\n            if (this.$ds[this.$primeDSName].hasChanges()) {\n                return this.$pendingChangeMessage;\n            }\n        }\n    }, {\n        key: '_$createPristineModel',\n        value: function _$createPristineModel(dsName) {\n            this.$viewModels.fkeyModels[dsName + 'Model'] = this.$dsService.createPristineModel(this.$ds[dsName]);\n        }\n    }, {\n        key: '_$watchForeignKeyModel',\n        value: function _$watchForeignKeyModel(modelName, valueField, parentValueField) {\n            var that = this;\n            this.$scope.$watch(function () {\n                return that.$viewModels.fkeyModels[modelName][parentValueField];\n            }, function (newValue, oldValue) {\n                var formModel = that.$viewModels.formModel;\n                var fkeyModels = that.$viewModels.fkeyModels;\n\n                if (newValue && formModel[valueField] !== fkeyModels[modelName][parentValueField]) {\n                    formModel[valueField] = fkeyModels[modelName][parentValueField];\n                }\n            });\n        }\n    }, {\n        key: '_$restoreSelection',\n        value: function _$restoreSelection() {\n            var dataItem = this.$grid.dataSource.get(this.$selectedId);\n            if (dataItem) {\n                var row = angular.element(\"[data-uid='\" + dataItem.uid + \"']\");\n                if (row.length) {\n                    this.$grid.select(row);\n                } else {\n                    this.$grid.select('tr[data-uid]:eq(0)');\n                }\n            } else {\n                this.$grid.select('tr[data-uid]:eq(0)');\n            }\n        }\n    }, {\n        key: '_$createSelection',\n        value: function _$createSelection() {\n            var _this3 = this;\n\n            this.$viewModels.formModel = kendo.proxyModelSetters(this.$grid.dataItem(this.$grid.select()));\n            this.$selectedId = this.$viewModels.formModel.id;\n\n            this._$createPristineModel('beCustomer.ttCustomerFK1DS');\n\n            this.$ds['beCustomer.ttCustomerFK1DS'].query({\n                filter: {\n                    field: 'CustomerId',\n                    operator: \"eq\",\n                    value: this.$viewModels.formModel['CustomerId']\n                }\n            }).then(function () {\n                _this3.$ds['beCustomer.ttCustomerFK1DS'].filter({});\n            });\n        }\n    }, {\n        key: '_$restoreState',\n        value: function _$restoreState() {\n            this.$grid.cancelChanges();\n            this._$restoreSelection();\n            this._$createSelection();\n        }\n    }, {\n        key: '_$errorHandler',\n        value: function _$errorHandler(e) {\n            this._$showErrorMessage(e);\n\n            if (!this.$insertInProcess) {\n                if (this.$requestType != 'update') {\n                    this._$restoreState();\n                }\n            }\n        }\n    }, {\n        key: '_$errorHandlerForeignKeys',\n        value: function _$errorHandlerForeignKeys(e) {\n            this._$showErrorMessage(e);\n        }\n    }, {\n        key: '_$showErrorMessage',\n        value: function _$showErrorMessage(e) {\n            var message = this.$dsService.extractErrorMessage(e);\n\n            this.$scope.$emit('notification', {\n                type: 'error',\n                message: message\n            });\n        }\n    }, {\n        key: '_$syncHandler',\n        value: function _$syncHandler(e) {\n            var _this4 = this;\n\n            this.$scope.$evalAsync(function () {\n                _this4._$restoreSelection();\n                _this4._$createSelection();\n                _this4.$updateInProcess = _this4.$insertInProcess = false;\n            });\n        }\n    }, {\n        key: '_$dataBoundHandler',\n        value: function _$dataBoundHandler(e) {\n            var _this5 = this;\n\n            this.$scope.$evalAsync(function () {\n                _this5.$grid.select('tr[data-uid]:eq(0)');\n                _this5.$model.events.onRowSelect({\n                    sender: _this5.$grid,\n                    fromView: true\n                });\n                _this5._$createSelection();\n            });\n        }\n    }, {\n        key: '_$changeHandler',\n        value: function _$changeHandler(e) {\n            var _this6 = this;\n\n            if (e.action != 'add' && e.action != 'remove' && this.$grid) {\n                this.$scope.$evalAsync(function () {\n                    _this6._$restoreSelection();\n                    _this6._$createSelection();\n                });\n            }\n        }\n    }, {\n        key: '_$requestStartHandler',\n        value: function _$requestStartHandler(e) {\n            this.$requestType = e.type;\n        }\n    }, {\n        key: '_$onChangeEvent',\n        value: function _$onChangeEvent(e) {\n            var _this7 = this;\n\n            this.$scope.$evalAsync(function () {\n                _this7._$createSelection();\n            });\n\n            this.$model.events.onRowSelect({\n                sender: this.$grid,\n                fromView: true\n            });\n        }\n    }, {\n        key: '_$edit',\n        value: function _$edit(e) {\n            this.$updateInProcess = true;\n        }\n    }, {\n        key: '_$save',\n        value: function _$save(e) {\n            if (this.$validator.validate()) {\n                this.$grid.saveChanges();\n            }\n        }\n    }, {\n        key: '_$cancel',\n        value: function _$cancel(e) {\n            this._$restoreState();\n            this.$updateInProcess = this.$insertInProcess = false;\n        }\n    }, {\n        key: '_$insert',\n        value: function _$insert() {\n            for (var property in this.$ds) {\n                if (this.$ds.hasOwnProperty(property)) {\n                    if (property !== this.$primeDSName) {\n                        this._$createPristineModel(property);\n                        var cachedPropertyName = '$cached' + property + 'Model';\n                        this.$viewModels.fkeyModels[cachedPropertyName] = {};\n                    }\n                }\n            }\n            this.$grid.dataSource.add({});\n            var data = this.$grid.dataSource.data();\n            this.$viewModels.formModel = kendo.proxyModelSetters(data[data.length - 1]);\n            this.$selectedId = null;\n            this.$insertInProcess = true;\n            this.$updateInProcess = false;\n        }\n    }, {\n        key: '_$delete',\n        value: function _$delete() {\n            var _this8 = this;\n\n            var removeRow = function removeRow() {\n                _this8.$grid.removeRow(_this8.$grid.select().first());\n                _this8.$grid.saveChanges();\n            };\n\n            if (this.$model.confirmRemove) {\n                this.$scope.$emit('dialog', {\n                    title: 'Are you sure you want to delete this record?',\n                    hint: 'The record will be permanently removed.',\n                    okButton: {\n                        handler: removeRow\n                    }\n                });\n            } else {\n                removeRow();\n            }\n        }\n    }, {\n        key: '_$destroy',\n        value: function _$destroy() {\n            for (var property in this.$ds) {\n                if (this.$ds.hasOwnProperty(property)) {\n                    if (property === this.$primeDSName) {\n                        this.$ds[property].unbind('sync', this._$syncHandler).unbind('error', this._$errorHandler).unbind('change', this._$changeHandler).unbind('requestStart', this._$requestStartHandler);\n                    } else {\n                        this.$ds[property].unbind('error', this._$errorHandler);\n                    }\n                }\n            }\n\n            this.$grid.wrapper.off('click', this._$onChangeEvent);\n\n            angular.element(this.$window).off('beforeunload', this._$beforeunloadHandler);\n        }\n    }]);\n\n    return BaseController;\n}();\n\nexports.default = BaseController;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/contracts/contract/controller.js\n// module id = 393\n// module chunks = 4\n\n//# sourceURL=webpack:///./src/modules/contracts/contract/controller.js?");

/***/ }),

/***/ 400:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _controller = __webpack_require__(393);\n\nvar _controller2 = _interopRequireDefault(_controller);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ContractsContractCtrl = function (_BaseController) {\n    _inherits(ContractsContractCtrl, _BaseController);\n\n    function ContractsContractCtrl($scope, $injector, stateData) {\n        _classCallCheck(this, ContractsContractCtrl);\n\n        return _possibleConstructorReturn(this, (ContractsContractCtrl.__proto__ || Object.getPrototypeOf(ContractsContractCtrl)).call(this, $scope, $injector));\n    }\n\n    // Fired when custom html section is loaded\n\n\n    _createClass(ContractsContractCtrl, [{\n        key: 'includeContentLoaded',\n        value: function includeContentLoaded() {}\n\n        // Fired when custom html section loading failed\n\n    }, {\n        key: 'includeContentError',\n        value: function includeContentError(e) {}\n\n        // Fired when view content is loaded\n\n    }, {\n        key: 'onShow',\n        value: function onShow($scope) {\n            console.log('Show');\n        }\n        /* Kendo event object*/\n\n    }, {\n        key: 'onRowSelect',\n        value: function onRowSelect(e) {}\n    }]);\n\n    return ContractsContractCtrl;\n}(_controller2.default);\n\nContractsContractCtrl.$inject = ['$scope', '$injector', 'stateData'];\n\nexports.default = ContractsContractCtrl;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/contracts/contract/controller.public.js\n// module id = 400\n// module chunks = 4\n\n//# sourceURL=webpack:///./src/modules/contracts/contract/controller.public.js?");

/***/ }),

/***/ 401:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/* global angular */\n\nfunction factory($q, dsService) {\n\n    function Contractscontract() {\n        this.scope = null;\n    }\n\n    Contractscontract.prototype = {\n        /*  The resolve method could return arbitrary data,\r\n            which will be available in the \"viewShowHandler\" and \"viewHideHandler\" handler as the customData argument */\n        onInit: function onInit($stateParams) {\n            console.log('Init', $stateParams);\n\n            return {};\n        },\n        /* \"customData\" is the data return by the viewInitHandler handler*/\n        onHide: function onHide(customData) {\n            console.log('hide', customData);\n        }\n    };\n\n    return new Contractscontract();\n}\n\nfactory.$inject = ['$q', 'dsService'];\n\nexports.default = factory;\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/contracts/contract/router-events.js\n// module id = 401\n// module chunks = 4\n\n//# sourceURL=webpack:///./src/modules/contracts/contract/router-events.js?");

/***/ }),

/***/ 412:
/***/ (function(module, exports) {

eval("module.exports = \"\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/contracts/contract/bottomSection.html\n// module id = 412\n// module chunks = 4\n\n//# sourceURL=webpack:///./src/modules/contracts/contract/bottomSection.html?");

/***/ }),

/***/ 413:
/***/ (function(module, exports) {

eval("module.exports = \"\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/contracts/contract/middleSection.html\n// module id = 413\n// module chunks = 4\n\n//# sourceURL=webpack:///./src/modules/contracts/contract/middleSection.html?");

/***/ }),

/***/ 414:
/***/ (function(module, exports) {

eval("module.exports = \"\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/contracts/contract/topSection.html\n// module id = 414\n// module chunks = 4\n\n//# sourceURL=webpack:///./src/modules/contracts/contract/topSection.html?");

/***/ })

});